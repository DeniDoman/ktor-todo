plugins {
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.7.20'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.7.20'
    id 'io.ktor.plugin' version '2.1.2'
}

group "com.example"
version "0.0.1"
mainClassName = "com.example.ApplicationKt"

def isDevelopment = project.ext.has("development")
applicationDefaultJvmArgs = ["-Dio.ktor.development=$isDevelopment"]

repositories {
    mavenCentral()
}

dependencies {
    implementation "io.ktor:ktor-server-core-jvm:$ktor_version"
    implementation "io.ktor:ktor-server-netty-jvm:$ktor_version"
    implementation "io.ktor:ktor-server-content-negotiation:$ktor_version"
    implementation "io.ktor:ktor-server-cors:$ktor_version"
    implementation 'io.ktor:ktor-server-cors-jvm:2.1.2'
    implementation "io.ktor:ktor-serialization-kotlinx-json:$ktor_version"

    implementation("io.ktor:ktor-client-core:$ktor_version")
    implementation("io.ktor:ktor-client-cio:$ktor_version")

    testImplementation "io.ktor:ktor-server-tests-jvm:$ktor_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit5:$kotlin_version"

    testImplementation "com.microsoft.playwright:playwright:$playwright_version"

    implementation "org.jetbrains.exposed:exposed-core:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-dao:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-jdbc:$exposed_version"

    implementation "org.kodein.di:kodein-di:7.18.0"

    implementation "ch.qos.logback:logback-classic:$logback_version"

    implementation "com.h2database:h2:$h2_version"
}

tasks.register('clientInstall') {
    exec {
        workingDir 'client/'
        commandLine 'npm', 'ci'
    }
}

tasks.register('clientBuild') {
    dependsOn('clientInstall')
    exec {
        workingDir 'client/'
        commandLine 'npm', 'run', 'build'
    }
}

tasks.register('runFull') {
    dependsOn('clientBuild')
    dependsOn(run)
}

test {
    useJUnitPlatform()
}